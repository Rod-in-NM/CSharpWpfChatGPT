<Window x:Class="CSharpWpfChatGPT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:ui="http://schemas.modernwpf.com/2019"
        mc:Ignorable="d"
        Icon="/CSharpWpfChatGPT;component/Resoruces/App.ico"        
        WindowStartupLocation="CenterScreen"
        Title="C# WPF ChatGPT by Peter Sun" Height="1000" Width="1600" MinHeight="400" MinWidth="500">
    <Grid FocusManager.FocusedElement="{Binding ElementName=ChatInputTextBox}">
        <!-- Header section -->
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="45"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!--Without MaxWidth, the right colmn could be hidden when left column stretched-->
            <ColumnDefinition Width="240" MinWidth="200" MaxWidth="400" />
            <ColumnDefinition Width="*" MinWidth="100" />
            <ColumnDefinition Width="Auto" />
            <!--Must be Auto and no MinWidth for Image Expand/Collapse button to work-->
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>

        <!--Top app bar area-->
        <Border Grid.Row="0" Grid.ColumnSpan="4" BorderThickness="3,2" IsEnabled="{Binding IsCommandNotBusy}" >
            <ui:SimpleStackPanel Orientation="Horizontal" Background="#19000000">
                <ui:CommandBar DefaultLabelPosition="Bottom" HorizontalAlignment="Left">
                    <!--SymbolIcon: enum Symbol in Symbol.cs in ModernWpf-->
                    <ui:AppBarButton Icon="NewFolder" Label="New Chat" FontWeight="SemiBold"
                                 Command="{Binding NewChatCommand}" Width="60" Margin="10,0,5,0" />
                    <ui:AppBarSeparator Margin="0,10,0,0" />
                </ui:CommandBar>
                <CheckBox Content="Streaming Mode" ToolTip="Streaming Mode: return a piece at a time" 
                          IsChecked="{Binding IsStreamingMode}" FontWeight="SemiBold" VerticalAlignment="Top" Margin="0,15,0,0" />
                <ui:AppBarSeparator Margin="0,10,0,0" />
                <ui:SimpleStackPanel Orientation="Horizontal">
                    <TextBox Text="Ask ChatGPT like talking to a person, one topic per chat" FontSize="20"
                        FontWeight="SemiBold" IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Center" 
                        Foreground="#FF0078D4" Background="Transparent" BorderThickness="0" Margin="0,5,0,0" />
                </ui:SimpleStackPanel>
            </ui:SimpleStackPanel>
        </Border>

        <!--Chat list-->
        <ui:ListView x:Name="ChatListView" Grid.Row="1" Grid.Column="0" IsEnabled="{Binding IsCommandNotBusy}"
                        ItemsSource="{Binding ChatList}" SelectedItem="{Binding SelectedChat}"
                        Background="Black" BorderBrush="LightGray" BorderThickness="0,1" SelectionMode="Single" 
                        ScrollViewer.IsDeferredScrollingEnabled="False" ScrollViewer.CanContentScroll="True"
                        Margin="0,0,0,2">
            <ui:ListView.ItemContainerStyle>
                <Style TargetType="ui:ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="Background" Value="#FF0078D4" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ui:ListView.ItemContainerStyle>
            <ui:ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,5">
                        <TextBlock Text="{Binding Name, Mode=OneWay}" TextWrapping="Wrap" FontSize="18" 
                                    Foreground="White" Margin="5,5,0,5" />
                    </Grid>
                </DataTemplate>
            </ui:ListView.ItemTemplate>
        </ui:ListView>
        <!--Selected chat's message list-->
        <!--Without VirtualizingPanel.ScrollUnit="Pixel", the last row doesn't seem to be fully visible-->
        <ui:ListView x:Name="MessageListView" Grid.Row="1" Grid.Column="1"
                        ItemsSource="{Binding SelectedChat.MessageList}" AlternationCount="2"
                        Background="#08000000" BorderBrush="LightGray" BorderThickness="0,1" SelectionMode="Single" 
                        ScrollViewer.IsDeferredScrollingEnabled="False" ScrollViewer.CanContentScroll="True" 
                        VirtualizingPanel.ScrollUnit="Pixel" Margin="0,0,2,2">
            <ui:ListView.ItemContainerStyle>
                <Style TargetType="ui:ListViewItem">
                    <!--Disable selection: https://stackoverflow.com/questions/1051215/wpf-listview-turn-off-selection-->
                    <Setter Property="Focusable" Value="False"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                        <!--RichTextBox Background="Transparent" below needed to look smooth-->
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#0F000000"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ui:ListView.ItemContainerStyle>
            <ui:ListView.ItemTemplate>
                <DataTemplate>
                    <!--Need Grid (not StackPanel) for TextBlock to wrap-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel>
                            <TextBlock Text="{Binding Sender}" FontSize="16" FontWeight="Bold"
                                        VerticalAlignment="Top" Margin="0,8,0,5"/>
                            <Button IsEnabled="{Binding DataContext.IsCommandNotBusy, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                    Command="{Binding DataContext.CopyMessageCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                    CommandParameter="{Binding .}" ToolTip="Copy Me and Bot messages to clipboard" Visibility="{Binding CopyDeleteButtonVisibility}"
                                    Background="Transparent" Margin="-8,0,0,0" >
                                <ui:SymbolIcon Symbol="Copy" />
                            </Button>
                            <Button IsEnabled="{Binding DataContext.IsCommandNotBusy, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                    Command="{Binding DataContext.DeleteMessageCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
                                    CommandParameter="{Binding .}" ToolTip="Delete Bot message" Visibility="{Binding CopyDeleteButtonVisibility}"
                                    Background="Transparent" Margin="-8,0,0,0" >
                                <ui:SymbolIcon Symbol="Delete" />
                            </Button>
                        </StackPanel>
                        <!--RichTextBox allows copying selection in the RichTextBox control-->
                        <RichTextBox Grid.Column="1" Background="Transparent" BorderThickness="0" IsReadOnly="True" Margin="0,0,5,2">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="{Binding Text}" FontSize="20" FontWeight="Normal"/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </Grid>
                </DataTemplate>
            </ui:ListView.ItemTemplate>
        </ui:ListView>
        <!--Image Pane on the right-->
        <Grid Grid.Row="1" Grid.Column="2" Visibility="{Binding ImagePaneVisibility}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Text="{Binding ImageInput, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" 
                     IsEnabled="{Binding IsCommandNotBusy}" 
                     ui:ControlHelper.PlaceholderText="A place name, etc." SpellCheck.IsEnabled="True"                                              
                     Background="#08000000" FontSize="20" Padding="7,7,0,5" Margin="12,10,10,5">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding CreateImageCommand}" />
                    <KeyBinding Key="Esc" Command="{Binding ClearImageInputCommand}" />
                </TextBox.InputBindings>
                <TextBox.CaretBrush>
                    <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#990078D4" Offset="0" />
                            <GradientStop Color="#990078D4" Offset="0.5" />
                            <GradientStop Color="#990078D4" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </TextBox.CaretBrush>
            </TextBox>
            <Button Grid.Column="1" Content="Image" ToolTip="Create an image by a name"
                    Command="{Binding CreateImageCommand}" Style="{DynamicResource AccentButtonStyle}"
                    IsEnabled="{Binding IsCommandNotBusy}" Height="40" 
                    FontSize="20" Padding="10,0,10,3" Margin="2,8,10,5"/>
            <Image Grid.Row="1" Grid.ColumnSpan="2" Source="{Binding ResultImage, TargetNullValue={x:Null}}" VerticalAlignment="Top"
                   MaxWidth="600" MaxHeight="400" Margin="10,10,10,0" />
        </Grid>
        <!--Expand/Collapse button on right side for Image Pane-->
        <Button Grid.Row="1" Grid.Column="3" BorderBrush="LightGray" BorderThickness="1,0,0,0"
                Command="{Binding ExpandOrCollapseImagePaneCommand}" ToolTip="Expand / Collapse Image Pane"
                Height="50" Background="Transparent">
            <Button.Resources>
                <Polygon x:Key="PolygonRight" Points="0,0,0,40,10,20" Fill="#1e70ca" Margin="0,0,3,0" />
                <Polygon x:Key="PolygonLeft" Points="10,0,10,40,0,20" Fill="#1e70ca" Margin="0,0,3,0"/>
                <SolidColorBrush x:Key="MouseOverBackground" Color="Red"/>
            </Button.Resources>
            <Button.Style >
                <Style TargetType="{x:Type Button}">
                    <!--Make background transparent (TemplateBinding). See comments on Button style in app.xaml.-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.4" ScaleY="1.4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding ImagePaneVisibility}" Value="Visible">
                            <Setter Property="Content" Value="{StaticResource PolygonRight}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ImagePaneVisibility}" Value="Collapsed">
                            <Setter Property="Content" Value="{StaticResource PolygonLeft}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--Vertical splitter between the 2 lists-->
        <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="6" 
                    Background="LightGray" Margin="0,0,0,2"/>

        <!--Chat input and current result-->
        <Grid Grid.Row="2" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="200" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!--#08000000 ligher than #19000000-->
            <!--AcceptsReturn="True" needed for Paste from clipboard, MaxHeight for height limit-->
            <TextBox x:Name="ChatInputTextBox" SpellCheck.IsEnabled="True" IsEnabled="{Binding IsCommandNotBusy}"
                        Text="{Binding ChatInput, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" 
                        MaxHeight="170" VerticalScrollBarVisibility="Auto" AcceptsReturn="True"
                        Background="#08000000" FontSize="20" Padding="7,2,0,5" Margin="12,10,10,7">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding SendCommand}" />
                    <KeyBinding Key="Esc" Command="{Binding ClearChatInputCommand}" />
                </TextBox.InputBindings>
                <TextBox.CaretBrush>
                    <LinearGradientBrush MappingMode="RelativeToBoundingBox"
                                    StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="#990078D4" Offset="0" />
                            <GradientStop Color="#990078D4" Offset="0.5" />
                            <GradientStop Color="#990078D4" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </TextBox.CaretBrush>
            </TextBox>

            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button Content="Send" Command="{Binding SendCommand}" Style="{DynamicResource AccentButtonStyle}"
                        Height="36" FontSize="20" Padding="10,0,10,3" Margin="3,2,0,0" />
            </StackPanel>
        </Grid>

        <!--StatusMessage-->
        <Border Grid.Row="3" Grid.ColumnSpan="4" BorderBrush="Gray" BorderThickness="0,1,0,0" Margin="0,5,0,0">
            <TextBlock Text="{Binding StatusMessage}" ToolTip="{Binding StatusMessage}" FontSize="18"
                        FontWeight="SemiBold" Margin="10,5,0,0" />
        </Border>
    </Grid>
</Window>
